import org.gradle.api.tasks.testing.logging.TestExceptionFormat

System.setProperty("file.encoding", "UTF-8")

buildscript {
  repositories {
    mavenCentral()
    gradlePluginPortal()
    maven {
      url "https://sandec.jfrog.io/artifactory/repo"
    }
  }

  dependencies {
    classpath "one.jpro:jpro-gradle-plugin:$JPRO_VERSION"
    classpath "SANDEC:simplefx-plugin-gradle:$SIMPLEFX_VERSION"
    classpath 'org.openjfx:javafx-plugin:0.0.14-SNAPSHOT-FORK'
  }
}

configure([project(':core'),project(':example'), project(':dev')]) {
  repositories {
    mavenCentral()
    maven {
      url "https://sandec.jfrog.io/artifactory/repo"
    }
  }

  apply plugin: 'de.sandec.simplefx'
  apply plugin: 'org.openjfx.javafxplugin'

  targetCompatibility = "11"
  sourceCompatibility = "11"
  compileScala {
    targetCompatibility = "1.8"
  }

  javafx {
    version = "$JAVAFX_VERSION"
    configurations = ["compileOnly", "testImplementation"]
    modules = [ 'javafx.base', 'javafx.graphics', 'javafx.controls', 'javafx.fxml', 'javafx.media', 'javafx.web' ]
  }

  test {
    useJUnitPlatform()

    testLogging.showStandardStreams = true
    testLogging.exceptionFormat TestExceptionFormat.FULL
    testLogging.showExceptions true
    testLogging.showCauses true
    testLogging.showStackTraces true
  }
}

configure([project(':core'), project(':dev'), project(':auth'), project(':popup')]) {
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'

  dependencies {
    api "com.sandec.jpro:jpro-webapi:$JPRO_VERSION"
    api "SANDEC:jnodes:$JNODES_VERSION"
    api "de.sandec:JMemoryBuddy:0.5.1"
    api "org.scala-lang:scala-library:2.12.10"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    // https://mvnrepository.com/artifact/commons-validator/commons-validator
    api group: 'commons-validator', name: 'commons-validator', version: '1.7'
  }


  group = 'com.sandec.jpro'
  version = "$JPRO_WEB_VERSION"

  java {
    withSourcesJar() // this also works for scala, nice!
    //withJavadocJar() // let's skip this for now, because it's unclear how this interacts with scala
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        from components.java
        groupId project.group
        artifactId ("jpro-routing-" + project.name)
        version project.version
        //artifact sourcesJar
      }
    }
    repositories {
      maven {
        name = "artifactory"
        url = "https://sandec.jfrog.io/artifactory/repo"
        credentials {
          username System.getenv("SANDEC_ARTIFACTORY_USERNAME")
          password System.getenv("SANDEC_ARTIFACTORY_PASSWORD")
        }
      }
    }
  }

}

configure([project(':core')]) {
  dependencies {
    api "SANDEC:simplefx_2.12:$SIMPLEFX_VERSION"
  }
}

configure([project(':dev')]) {
  dependencies {
    implementation project(':core')
    api "org.kordamp.ikonli:ikonli-javafx:$IKONLY_VERSION"
    api "org.kordamp.ikonli:ikonli-evaicons-pack:$IKONLY_VERSION"
    api "org.kordamp.ikonli:ikonli-ionicons4-pack:$IKONLY_VERSION"
    implementation "fr.brouillard.oss:cssfx:$CSSFX_VERSION"
    implementation 'org.scenic-view:scenic-view:11.0.3-SNAPSHOT-FORK'
  }
}

configure([project(':example')]) {
  apply plugin: 'jpro-gradle-plugin'
//  mainClassName = "example.scala.TestWebApplication"
//  mainClassName = "example.scala.TestExtensions"
//  mainClassName = "example.scala.ColorTransitionApp"
//  mainClassName = "example.colors.ColorsApp"
//  mainClassName = "example.popup.PopupApp"
  mainClassName = "example.login.LoginApp"
  dependencies {
    implementation project(":auth")
    implementation project(':core')
    implementation project(':popup')
    implementation project(':dev')
    implementation 'org.controlsfx:controlsfx:11.1.2'
    implementation "fr.brouillard.oss:cssfx:$CSSFX_VERSION"
  }

  jpro {
    openingPath = "/"
  }
}
